# Note: We moved Pronounce and PronounceArpa into a separate .grm file
# for you, to reduce compilation time.  See cmudict.grm for comments.

import 'byte.grm' as bytelib;
import 'cmudict.grm' as cmudict;
import 'arpabet.grm' as arpabet;

Sigma = bytelib.kGraph | bytelib.kSpace;
arpa = SymbolTable['arpabet.sym'];
arpaSigma = arpabet.Phoneme;

Pronounce = StringFile['cmumini.txt', byte, arpa];

export StressPattern = CDRewrite[((arpabet.Consonant:"".arpa) | (arpabet.Stressed:"AA1".arpa) | (arpabet.Unstressed:"AA0".arpa))*,
                                 "".arpa,
                                 "".arpa,
                                 arpaSigma*,
                                 'sim', 'obl'];

# transform back to byte mode
BackToByte = (("".arpa : "") | ("AA1".arpa:"1") | ("AA0".arpa:"0"))*;
Dacytl = ("1" "0" "0");

export Results = Optimize[Project[Pronounce @StressPattern @ BackToByte @ (Dacytl*),'input']];
export ListResults = "" : Results;