Zero = "0";
One = "1";
Bit = Zero | One;
export First = Optimize[Zero Zero* Bit* One One One One?];
export Second = Optimize[Zero+ Bit* One{3,4}];
export Disagreements = Optimize[ (First - Second) | (Second - First) ];
export Triplets = Optimize[(Zero* | (One{3} One*))*];
export NotPillars = Optimize[Zero* One Zero*(Zero* One Zero* One Zero*)*];
export Oddlets = Optimize[Zero* | ((Zero* One)+ Zero* (One{2})*)];
export Test = Optimize[(Zero* One)+ Zero* (One{2})*];

export WFlip = Optimize[((Zero : One <2>) | (Zero <1>)) ((Zero : Zero One <0.5>) | (One : Zero <0.4>))+ (One <0.5>)];
export WeightedMultipath = (One : Zero <2>)+ (One : Zero <1>)+ (Zero <0.1>)+;
export WeightedMultipathOpt = Optimize[WeightedMultipath];

# EC - No Det
export NoDet = (One <0>) ((Zero <0>)* | (Zero <1>)* ) ((One <1>) | (Zero <0>));
